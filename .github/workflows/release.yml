name: Release on Tag

on:
  push:
    tags:
      - 'v*'  # v1.0.0 같은 태그에 반응

permissions:
  contents: write  # 🔐 이거 꼭 추가해야 릴리즈 생성 가능

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: 📦 Create tar.gz and zip archives
        run: |
          VERSION=${GITHUB_REF##*/}
          PROJECT_NAME="direnv"

          mkdir -p dist
          tar -czf dist/${PROJECT_NAME}-${VERSION}.tar.gz ./src
          zip -r dist/${PROJECT_NAME}-${VERSION}.zip ./src

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: 📝 Generate release notes from commits
        id: notes
        run: |
          VERSION=${GITHUB_REF##*/}

          # Get previous tag - find the tag before current one
          PREV_TAG=$(git tag --sort=-version:refname | grep -A1 "^${VERSION}$" | tail -n1)

          # If PREV_TAG is same as VERSION (only one tag exists), try alternate method
          if [ "$PREV_TAG" = "$VERSION" ] || [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git rev-list --tags --skip=1 --max-count=1 2>/dev/null | xargs git describe --tags 2>/dev/null || echo "")
          fi

          {
            echo "RELEASE_NOTES<<EOF"
            echo "## What's Changed"
            echo ""

            if [ -n "$PREV_TAG" ]; then
              # Generate changelog from commits between tags
              git log $PREV_TAG..$VERSION --pretty=format:"- %s (%h)" --no-merges | grep -v "Update version:" || echo "- No notable changes"
              echo ""
              echo ""
              echo "**Full Changelog**: https://github.com/yhk1038/direnv/compare/$PREV_TAG...$VERSION"
            else
              # First release
              git log $VERSION --pretty=format:"- %s (%h)" --no-merges | head -10
              echo ""
              echo ""
              echo "**First Release** 🎉"
            fi

            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: 🚀 Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*.tar.gz
            dist/*.zip
          body: ${{ steps.notes.outputs.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
